@model HW03.Models.MaintainVM
@{
    ViewBag.Title = "Maintain";
}

<h2>Maintain</h2>

@Html.AntiForgeryToken() <!-- Anti-Forgery Token placed here -->

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@using PagedList.Mvc;
@using PagedList;

<div class="row">
    <!-- Authors Section -->
    <div class="col-md-6">
        <div class="col">
            <a href="@Url.Action("Create", "authors")" class="btn btn-lg" style="border-radius: 20px; background-color:#27898b; color:white">Create</a>
        </div>
        <h3>Authors</h3>
        <table class="table" style="width:100%">
            <tr>
                <th>@Html.DisplayNameFor(model => model.authors.FirstOrDefault().authorId)</th>
                <th>@Html.DisplayNameFor(model => model.authors.FirstOrDefault().name)</th>
                <th>@Html.DisplayNameFor(model => model.authors.FirstOrDefault().surname)</th>
                <th></th>
            </tr>
            @foreach (var item in Model.authors)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.authorId)</td>
                    <td>@Html.DisplayFor(modelItem => item.name)</td>
                    <td>@Html.DisplayFor(modelItem => item.surname)</td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "authors", new { id = item.authorId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "authors", new { id = item.authorId })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "authors", new { id = item.authorId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(Model.authors, page => Url.Action("Maintain", new { page }))
    </div>

    <br />
    <br />

    <!-- Types Section -->
    <div class="col-md-6">
        <div class="col">
            <a href="@Url.Action("Create", "types")" class="btn btn-lg" style="border-radius: 20px; background-color:#27898b; color:white">Create</a>
        </div>
        <h3>Types</h3>
        <table class="table" style="width:100%">
            <tr>
                <th>@Html.DisplayNameFor(model => model.types.FirstOrDefault().typeId)</th>
                <th>@Html.DisplayNameFor(model => model.types.FirstOrDefault().name)</th>
                <th></th>
            </tr>
            @foreach (var item in Model.types)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.typeId)</td>
                    <td>@Html.DisplayFor(modelItem => item.name)</td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "types", new { id = item.typeId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "types", new { id = item.typeId })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "types", new { id = item.typeId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(Model.types, page => Url.Action("Maintain", new { page }))
    </div>
</div>

<br />
<br />

<div class="row">
    <!-- Borrows Section -->
    <div class="col-md-12">
        <div class="col">
            <a href="@Url.Action("Create", "burrows")" class="btn btn-lg" style="border-radius: 20px; background-color:#27898b; color:white">Create</a>
        </div>
        <h3>Borrows</h3>
        <table class="table" style="width:100%">
            <tr>
                <th>@Html.DisplayNameFor(model => model.borrows.FirstOrDefault().borrowId)</th>
                <th>@Html.DisplayNameFor(model => model.students.FirstOrDefault().studentId)</th>
                <th>@Html.DisplayNameFor(model => model.books.FirstOrDefault().bookId)</th>
                <th>@Html.DisplayNameFor(model => model.borrows.FirstOrDefault().takenDate)</th>
                <th>@Html.DisplayNameFor(model => model.borrows.FirstOrDefault().broughtDate)</th>
                <th></th>
            </tr>
            @foreach (var item in Model.borrows)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.borrowId)</td>
                    <td>@Html.DisplayFor(modelItem => item.student.name)</td>
                    <td>@Html.DisplayFor(modelItem => item.book.name)</td>
                    <td>@Html.DisplayFor(modelItem => item.takenDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.broughtDate)</td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "borrows", new { id = item.borrowId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "borrows", new { id = item.borrowId  })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "borrows", new { id = item.borrowId  })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(Model.borrows, page => Url.Action("Maintain", new { page }))
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">My To Do List</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content"></div>
        </div>
    </div>
</div>

<script>
    $(function () {
        // Function to handle Edit link click event in the Combined View and Details modal
        $(".edit-link, .edit-link-in-modal").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });

        // Function to handle form submission within the modal
        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        // Delete functionality
        $(".delete-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");
            var token = $('input[name="__RequestVerificationToken"]').val(); // Get the token

            if (confirm("Are you sure you want to delete this item?")) {
                $.ajax({
                    url: url,
                    type: "POST",
                    data: { __RequestVerificationToken: token }, // Send the token
                    success: function () {
                        location.reload(); // Refresh the page on success
                    },
                    error: function (xhr, status, error) {
                        console.log("Status:", status);
                        console.log("Error:", error);
                        console.log("Response:", xhr.responseText);
                        alert("Error deleting item: " + error + "\n" + xhr.responseText);
                    }
                });
            }
        });
    });
</script>
